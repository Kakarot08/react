{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","props","profile","className","to","onClick","initials","SignedOutLinks","state","console","log","firebase","Links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","AuthIsLoaded","children","useSelector","isLoaded","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfConfig","userProfile","useFirestoreForProfile","rrfProps","config","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.b40e6501.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authAction';\r\n\r\nfunction SignedInLinks(props) {\r\n    const { profile } = props;\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li> <a onClick={props.signOut}> Log Out</a> </li>\r\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LogIn_Success'})\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LogIn_Error', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'})\r\n        }).catch()        \r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res) => {\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]    \r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction SignedOutLinks() {\r\n    return (\r\n        <div>\r\n            <ul className=\"right\">\r\n                <li><NavLink to='/signup'>Signup</NavLink></li>\r\n                <li><NavLink to='/signin'>Login</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Navbar(props) {\r\n    const { auth, profile } = props;\r\n    console.log(auth);\r\n    const Links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">React-Redux-Firebase-App</Link>\r\n            </div>\r\n            {Links}\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map((item) => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user}</span>\r\n                                    <span> {item.content} </span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\"> {project.title}</span>\r\n                <p>Posted By {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/'+project.id}>\r\n                        <ProjectSummary project={project} key={project.id} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications} = this.props;\r\n\r\n        if ( !auth.uid ) return <Redirect to='/signin'></Redirect>\r\n        return (\r\n            <div className=\"dashboard.container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth, \r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n        {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n\r\n    if ( !auth.uid ) return <Redirect to='/signin'></Redirect>\r\n\r\n    if (project) {\r\n      return (\r\n        <div className=\"container section project-details\">\r\n          <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n              <span className=\"card-title\">{project.title}</span>\r\n              <p>{project.content}</p>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n              <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n              <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"container center\">\r\n          <p>Loading project...</p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n\r\n        if ( auth.uid ) return <Redirect to='/'></Redirect>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"center red-text\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authAction'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n\r\n        if (auth.uid) return <Redirect to='/signin'></Redirect>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    </div>\r\n                    <div className=\"center red-text\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n\r\n        if ( !auth.uid ) return <Redirect to='/signin'></Redirect>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" onChange={this.handleChange} className=\"materialize-textarea\" />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject) \r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database  \r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date() \r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project })\r\n        }).catch((err) => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\r\n        })\r\n    }\r\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route exact path='/project/:id' component={ProjectDetails} />\n          <Route exact path='/signin' component={SignIn} />\n          <Route exact path='/signup' component={SignUp} />\n          <Route exact path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LogIn_Error':\r\n            console.log('LogIn Error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        case 'LogIn_Success':\r\n            console.log('LogIn Success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS': \r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR': \r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'React', content: 'Js library component based architecture, Not a framework Used for UI'}, \r\n        {id: '2', title: 'Redux', content: 'State Management Tool'}, \r\n        {id: '3', title: 'React-Redux', content: 'Binding layer between react and redux'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('CREATED PROJECT', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR': \r\n            console.log('Create Project Error', action.err);\r\n            return state;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\n\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA8-CGdLpWHhVMyvhf_SkFb2UMfqafF9Gc\",\r\n    authDomain: \"react-redux-firebase-c20a9.firebaseapp.com\",\r\n    databaseURL: \"https://react-redux-firebase-c20a9.firebaseio.com\",\r\n    projectId: \"react-redux-firebase-c20a9\",\r\n    storageBucket: \"react-redux-firebase-c20a9.appspot.com\",\r\n    messagingSenderId: \"702427762610\",\r\n    appId: \"1:702427762610:web:ebf892987a084f1d311eab\",\r\n    measurementId: \"G-3R4DPWF6H8\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nfirebase.firestore();\r\n\r\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { getFirebase } from 'react-redux-firebase';\nimport firebase from 'firebase/app';\nimport fbConfig from './config/fbConfig'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport { createFirestoreInstance } from 'redux-firestore'\n\nimport { useSelector } from 'react-redux'\nimport { isLoaded } from 'react-redux-firebase'\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>splash screen...</div>;\n  return children\n}\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig)\n  )\n);\n\nconst rrfConfig = {\n  fbConfig,\n  userProfile: 'users',\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}